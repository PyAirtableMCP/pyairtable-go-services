server {
    listen 80;
    server_name localhost;

    location / {
        add_header Content-Type application/json;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key' always;
        }

        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key' always;
        }

        # Health check
        location = /health {
            return 200 '{"status": "healthy", "service": "airtable-gateway-mock"}';
        }

        # API endpoints
        location ~ ^/api/v1/bases/([^/]+)/tables/([^/]+)/records {
            return 200 '{"records": [{"id": "recTestRecord001", "fields": {"Name": "Test Record", "Status": "Active"}, "createdTime": "2025-01-08T12:00:00.000Z"}]}';
        }

        location ~ ^/api/v1/bases/([^/]+)/tables {
            return 200 '{"tables": [{"id": "tblTestTable001", "name": "Test Table", "primaryFieldId": "fldTestField001"}]}';
        }

        location ~ ^/api/v1/bases/([^/]+) {
            return 200 '{"id": "$1", "name": "Test Base", "permission_level": "create"}';
        }

        location /api/v1/bases {
            return 200 '{"bases": [{"id": "appTestAlpha001", "name": "Test Alpha Base", "permission_level": "create"}]}';
        }

        # Default response
        try_files $uri $uri/ /default.json;
    }
}