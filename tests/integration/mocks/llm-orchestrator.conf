server {
    listen 80;
    server_name localhost;

    location / {
        add_header Content-Type application/json;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key' always;
        }

        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key' always;
        }

        # Health check
        location = /health {
            return 200 '{"status": "healthy", "service": "llm-orchestrator-mock"}';
        }

        # Chat completions
        location = /chat/completions {
            return 200 '{"choices": [{"message": {"role": "assistant", "content": "This is a test response from the mock LLM orchestrator."}}], "usage": {"prompt_tokens": 10, "completion_tokens": 15, "total_tokens": 25}}';
        }

        # Session management
        location ~ ^/sessions/([^/]+) {
            return 200 '{"session_id": "$1", "status": "active", "created_at": "2025-01-08T12:00:00Z"}';
        }

        location = /sessions {
            return 200 '{"sessions": [{"session_id": "test-session-001", "status": "active", "created_at": "2025-01-08T12:00:00Z"}]}';
        }

        # Default response
        try_files $uri $uri/ /default.json;
    }
}